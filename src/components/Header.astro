---
import Logo from '@/components/Logo.astro'
import Container from './Container.astro'
import ProductSearch from './ProductSearch.astro'
import { Icon } from 'astro-icon/components'
import { cn } from '@/lib/utils'
import { site } from '@/config'
const socialLinks = Object.entries(site.socialLinks)

const pathname = Astro.url.pathname

const normalizedPathName =
	pathname.length > 1 && pathname.endsWith('/') ? pathname.slice(0, -1) : pathname

const pages = [
	{
		title: 'Productos',
		href: '/productos',
		active: normalizedPathName.startsWith('/productos'),
	},
	{
		title: 'Contacto',
		href: '/contacto',
		active: pathname === '/contacto',
	},
]

// <!--
// class='sticky z-50 top-0 left-0 h-[64px] bg-background/50 backdrop-blur-md saturate-150'
// -->
---

<header data-state="closed" id="main-header" class="fixed z-50 left-1/2 -translate-x-1/2 top-2">
	<div
		class="relative bg-background shadow rounded-2xl px-6 py-2 flex items-center md:gap-6 justify-between">
		<a
			href="/"
			class="!text-inherit hover:scale-110 transition-transform duration-100"
			data-astro-reload>
			<Logo />
		</a>

		<!-- Desktop Nav -->
		<nav class="hidden lg:flex gap-2 items-center">
			{
				pages.map((page) => (
					<a
						href={page.href}
						data-astro-reload
						class={cn(
							'flex justify-center items-center  hover:text-primary ',
							page.active && 'text-primary font-bold'
						)}>
						<span class="">{page.title}</span>
					</a>
				))
			}
		</nav>
		<ProductSearch />
		<!-- <div class="min-w-[200px] px-2 flex items-center"> -->
		<!-- 	<button -->
		<!-- 		id="open-search-dialog" -->
		<!-- 		class="flex flex-1 items-center gap-2 rounded-md px-2 py-1 bg-gray-200"> -->
		<!-- 		<span class="text-muted flex-1">Buscar...</span> -->
		<!-- 		<span class="hidden">Producto...</span> -->
		<!-- 		<span class="text-muted"> -->
		<!-- 			<Icon class="" name="tabler:search" size={22} /> -->
		<!-- 		</span> -->
		<!-- 	</button> -->
		<!-- </div> -->
		<div class="hidden md:flex justify-center items-center gap-1">
			{
				socialLinks.map(([name, link]) => (
					<a
						class="hover:scale-125 transition-transform duration-200"
						href={link}
						rel="noopener noreferrer"
						target="_blank">
						<Icon name={name} size={30} />
					</a>
				))
			}
		</div>

		<div class="lg:hidden">
			<button
				id="burger-button"
				class="menu-burger-btn transition flex items-center"
				aria-label="menu mobile">
				<Icon name="tabler:menu" size={25} />
				<Icon name="tabler:x" size={25} />
			</button>
		</div>

		<!-- Mobile Menu -->
		<nav
			id="mobile-menu"
			class="invisible left-0 flex flex-col md:hidden absolute top-16 w-full bg-background rounded-2xl shadow-md py-8">
			{
				pages.map((page) => (
					<a
						href={page.href}
						data-astro-reload
						class={cn(
							'flex justify-center items-center  hover:text-primary ',
							page.active && 'text-primary font-bold'
						)}>
						<span class="">{page.title}</span>
					</a>
				))
			}

			<div class="flex gap-2 mx-auto mt-4">
				{
					socialLinks.map(([name, link]) => (
						<a
							class="hover:scale-125 transition-transform duration-200"
							href={link}
							rel="noopener noreferrer"
							target="_blank">
							<Icon name={name} size={30} />
						</a>
					))
				}
			</div>
		</nav>
	</div>
</header>

<script>
	// document.addEventListener('astro:page-load', () => {
	const $header = document.querySelector('#main-header') as HTMLDivElement
	const $burgerBtn = $header.querySelector('#burger-button') as HTMLButtonElement

	$burgerBtn.addEventListener('click', () => {
		const isOpen = $header.getAttribute('data-state') !== 'open'
		$header.setAttribute('data-state', isOpen ? 'open' : 'closed')
		document.body.toggleAttribute('data-mobile-menu-expanded', isOpen)
	})

	//animation on scroll
	window.addEventListener('scroll', () => {
		if (window.scrollY > 64) {
			$header.setAttribute('data-scroll', 'active')
		} else {
			$header.removeAttribute('data-scroll')
		}
	})
	// })
</script>
<style>
	[data-state='open'] #mobile-menu {
		transform: translateX(0);
		visibility: visible;
	}

	/* :global([data-is-home]) :is(header) { */
	/* 	color: #fff; */
	/* 	background: transparent; */
	/* } */
	[data-state='closed'] [data-icon='tabler:x'] {
		display: none;
	}

	[data-state='open'] [data-icon='tabler:menu'] {
		display: none;
	}

	[data-state='open'] .menu-burger-btn {
		transform: rotate(90deg);
	}
	/* :global([data-mobile-menu-expanded]) { */
	/* 	overflow-y: hidden; */
	/* } */
</style>
